#!/bin/sh
#
# PREVENTS FROM COMMITING CONSOLE METHODS

# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.

alias typescriptfiles='find . -type f -name "*.ts" | xargs git diff --cached --name-only $against'
if [ -n "$(typescriptfiles)" ]; then
  if typescriptfiles | xargs grep --color --with-filename -n "console"; then
    echo "Error commiting changes: Please remove console methods and its usage before you commit code."
    exit 1
  fi
  if typescriptfiles | xargs grep --color --with-filename -n "console.log()"; then
    echo "Error commiting changes: Please console.log() method before commiting code."
    exit 1
  fi
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
